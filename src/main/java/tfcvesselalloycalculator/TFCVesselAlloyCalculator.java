package tfcvesselalloycalculator;

import tfcvesselalloycalculator.ui.OreTableEntry;
import tfcvesselalloycalculator.vessel.VesselRecipe;
import tfcvesselalloycalculator.vessel.VesselContainer;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.JsonSerializationContext;
import com.google.gson.JsonSerializer;
import com.google.gson.stream.JsonReader;
import java.awt.Component;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import javax.swing.text.DefaultCaret;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import tfcvesselalloycalculator.vessel.VesselSlot;

public class TFCVesselAlloyCalculator extends javax.swing.JFrame {
	public static Settings settings;
	public static VesselContainer vesselContainer;
	public static ResourceHelper resourceHelper;
	
	public TFCVesselAlloyCalculator() {
		initComponents();
		vesselContainer = new VesselContainer(new VesselSlot[] {vesselLabel1, vesselLabel2, vesselLabel3, vesselLabel4});
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        oreSelectionTable = new javax.swing.JTable() {
            @Override
            public Class getColumnClass(int column) {
                return getValueAt(0, column).getClass();
            }
            @Override
            public Component prepareRenderer(TableCellRenderer renderer, int row, int col) {
                Component comp = super.prepareRenderer(renderer, row, col);
                tfcvesselalloycalculator.ui.OreTableEntry value = (tfcvesselalloycalculator.ui.OreTableEntry)getModel().getValueAt(row, col);
                comp.setBackground(value.getBackgroundColor());
                return comp;
            }
            public String getToolTipText(MouseEvent e) {
                String tip = null;
                java.awt.Point p = e.getPoint();
                int rowIndex = rowAtPoint(p);
                int colIndex = columnAtPoint(p);
                if(getValueAt(rowIndex, colIndex) != null && getValueAt(rowIndex, colIndex) instanceof tfcvesselalloycalculator.ui.OreTableEntry) {
                    tip = ((tfcvesselalloycalculator.ui.OreTableEntry)getValueAt(rowIndex, colIndex)).getTooltip();
                }

                return tip;
            }
        };
        vesselSpacingPanel = new javax.swing.JPanel();
        vesselLabel1 = new tfcvesselalloycalculator.vessel.VesselSlot();
        vesselLabel2 = new tfcvesselalloycalculator.vessel.VesselSlot();
        vesselLabel4 = new tfcvesselalloycalculator.vessel.VesselSlot();
        vesselLabel3 = new tfcvesselalloycalculator.vessel.VesselSlot();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultField = new javax.swing.JTextPane();
        descriptionLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TFC Vessel Alloy Calculator");
        setMinimumSize(new java.awt.Dimension(725, 300));

        oreSelectionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Small (" + tfcvesselalloycalculator.vessel.VesselRecipe.Ore.SizeType.SMALL.getAmount() + " units)",
                "Poor (" + tfcvesselalloycalculator.vessel.VesselRecipe.Ore.SizeType.POOR.getAmount() + " units)",
                "Regular (" + tfcvesselalloycalculator.vessel.VesselRecipe.Ore.SizeType.REGULAR.getAmount() + " units)",
                "Rich (" + tfcvesselalloycalculator.vessel.VesselRecipe.Ore.SizeType.RICH.getAmount() + " units)"
            }
        ) {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }
        });
        oreSelectionTable.setRowHeight(32);
        oreSelectionTable.setRowSelectionAllowed(false);
        oreSelectionTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        oreSelectionTable.setTableHeader(null);
        jScrollPane1.setViewportView(oreSelectionTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        vesselLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        vesselLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vesselLabel1.setPreferredSize(new java.awt.Dimension(64, 64));
        vesselLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                vesselLabel1MouseReleased(evt);
            }
        });

        vesselLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        vesselLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vesselLabel2.setPreferredSize(new java.awt.Dimension(64, 64));
        vesselLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                vesselLabel2MouseReleased(evt);
            }
        });

        vesselLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        vesselLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vesselLabel4.setPreferredSize(new java.awt.Dimension(64, 64));
        vesselLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                vesselLabel4MouseReleased(evt);
            }
        });

        vesselLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        vesselLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vesselLabel3.setPreferredSize(new java.awt.Dimension(64, 64));
        vesselLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                vesselLabel3MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout vesselSpacingPanelLayout = new javax.swing.GroupLayout(vesselSpacingPanel);
        vesselSpacingPanel.setLayout(vesselSpacingPanelLayout);
        vesselSpacingPanelLayout.setHorizontalGroup(
            vesselSpacingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vesselSpacingPanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(vesselSpacingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vesselLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vesselLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(vesselSpacingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vesselLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vesselLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        vesselSpacingPanelLayout.setVerticalGroup(
            vesselSpacingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vesselSpacingPanelLayout.createSequentialGroup()
                .addGroup(vesselSpacingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vesselLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vesselLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(vesselSpacingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vesselLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vesselLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        resultField.setEditable(false);
        resultField.setContentType("text/html"); // NOI18N
        resultField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        resultField.setText("<html>\r\n  <head>\r\n\r\n  </head>\r\n  <body>\r\n    <p style=\"margin-top: 0\">\r\n      \rPlease select some ores.\n    </p>\r\n  </body>\r\n</html>\r\n");
        resultField.setToolTipText("");
        resultField.setAutoscrolls(false);
        resultField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        resultField.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jScrollPane2.setViewportView(resultField);
        DefaultCaret caret = (DefaultCaret)resultField.getCaret();
        caret.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);

        descriptionLabel.setText("<html>\nLeft click / scroll up to add a entry to the vessel, right click / scroll down to remove.<br />\nShift+click to quickly add/remove stacks at a time.\n</html>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(vesselSpacingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(vesselSpacingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vesselLabel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vesselLabel1MouseReleased
       handleVesselClick(0, evt);
    }//GEN-LAST:event_vesselLabel1MouseReleased

    private void vesselLabel2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vesselLabel2MouseReleased
       handleVesselClick(1, evt);
    }//GEN-LAST:event_vesselLabel2MouseReleased

    private void vesselLabel3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vesselLabel3MouseReleased
        handleVesselClick(2, evt);
    }//GEN-LAST:event_vesselLabel3MouseReleased

    private void vesselLabel4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vesselLabel4MouseReleased
        handleVesselClick(3, evt);
    }//GEN-LAST:event_vesselLabel4MouseReleased

	private void handleVesselClick(int slotId, MouseEvent evt) {
		//if(evt.getButton() == MouseEvent.BUTTON1) {
		//	vesselContainer.add(vesselContainer.slots[slotId].getOreType(), evt.isShiftDown());
		//} else if(evt.getButton() == MouseEvent.BUTTON3) {
			vesselContainer.remove(slotId, evt.isShiftDown());
		//}
	}
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch(ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(TFCVesselAlloyCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>
		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				try {
					Gson gson = new GsonBuilder().setPrettyPrinting().registerTypeAdapter(VesselRecipe.Ore.SizeType.class, new JsonSerializer<VesselRecipe.Ore.SizeType>() {
						@Override
						public JsonElement serialize(VesselRecipe.Ore.SizeType t, java.lang.reflect.Type type, JsonSerializationContext jsc) {
							JsonObject jsonSizeType = new JsonObject();
							jsonSizeType.addProperty("sizeType", t.toString());
							jsonSizeType.addProperty("sizeInUnits", t.getAmount());
							return jsonSizeType;
						}
					}).registerTypeAdapter(VesselRecipe.Ore.SizeType.class, new JsonDeserializer<VesselRecipe.Ore.SizeType>() {
						@Override
						public VesselRecipe.Ore.SizeType deserialize(JsonElement je, java.lang.reflect.Type type, JsonDeserializationContext jdc) throws JsonParseException {
							JsonObject jsonSizeType = je.getAsJsonObject();
							VesselRecipe.Ore.SizeType sizeTypeVal = VesselRecipe.Ore.SizeType.valueOf(jsonSizeType.get("sizeType").getAsString());
							sizeTypeVal.setAmount(jsonSizeType.get("sizeInUnits").getAsInt());
							return sizeTypeVal;
						}
					}).create();
					
					//String settingGson = gson.toJson(settings = new Settings());
					//System.out.println(settingGson);
					
					resourceHelper = new ResourceHelper();
					settings = gson.fromJson(new JsonReader(new BufferedReader(new InputStreamReader(resourceHelper.getResource("TFCVesselAlloyCalculatorSettings.json").openStream()))), Settings.class);
					TFCVesselAlloyCalculator jfcAlloyCalculator = new TFCVesselAlloyCalculator();
					
					MouseWheelListener vesselMouseWheelListener = new MouseWheelListener() {
						@Override
						public void mouseWheelMoved(MouseWheelEvent e) {
							int vesselSlot = -1;
							if(e.getComponent() == jfcAlloyCalculator.vesselLabel1) {
								vesselSlot = 0;
							} else if(e.getComponent() == jfcAlloyCalculator.vesselLabel2) {
								vesselSlot = 1;
							} else if(e.getComponent() == jfcAlloyCalculator.vesselLabel3) {
								vesselSlot = 2;
							} else if(e.getComponent() == jfcAlloyCalculator.vesselLabel4) {
								vesselSlot = 3;
							}
							if(vesselSlot == -1 || vesselContainer.slots[vesselSlot].getOreType() == null)
								return;
							
							int rotation = e.getWheelRotation();
							if(rotation < 0) {
								vesselContainer.add(vesselContainer.slots[vesselSlot].getOreType(), false);
							} else if(rotation > 0) {
								vesselContainer.remove(vesselContainer.slots[vesselSlot].getOreType(), false);
							}
						}
					};
					jfcAlloyCalculator.vesselLabel1.addMouseWheelListener(vesselMouseWheelListener);
					jfcAlloyCalculator.vesselLabel2.addMouseWheelListener(vesselMouseWheelListener);
					jfcAlloyCalculator.vesselLabel3.addMouseWheelListener(vesselMouseWheelListener);
					jfcAlloyCalculator.vesselLabel4.addMouseWheelListener(vesselMouseWheelListener);
					
					DefaultTableModel tableModel = (DefaultTableModel) oreSelectionTable.getModel();
					
					for(int row = 0; row < settings.ores.length; row++) {
						OreTableEntry[] rowEntries = new OreTableEntry[VesselRecipe.Ore.SizeType.values().length];
						for(int column = 0; column < rowEntries.length; column++) {
							rowEntries[column] = new OreTableEntry(settings.ores[row], VesselRecipe.Ore.SizeType.values()[column], column, row);
						}
						tableModel.addRow(rowEntries);
					}
					
					oreSelectionTable.addMouseListener(new MouseAdapter() {
						int pressClickedRow = -1;
						int pressClickedColumn = -1;
						int mouseClickType = -1;
						@Override
						public void mousePressed(MouseEvent e) {
							Point contextMenuOpenedAt = e.getPoint();
							pressClickedRow = oreSelectionTable.rowAtPoint(contextMenuOpenedAt);
							pressClickedColumn = oreSelectionTable.columnAtPoint(contextMenuOpenedAt);
							mouseClickType = e.getButton();
						}

						@Override
						public void mouseReleased(MouseEvent e) {
							Point contextMenuOpenedAt = e.getPoint();
							int clickedRow = oreSelectionTable.rowAtPoint(contextMenuOpenedAt);
							int clickedColumn = oreSelectionTable.columnAtPoint(contextMenuOpenedAt);
							if(clickedRow == pressClickedRow && clickedColumn == pressClickedColumn && mouseClickType == e.getButton()) {
								switch(mouseClickType) {
									case MouseEvent.BUTTON1:
										if(oreSelectionTable.getValueAt(clickedRow, clickedColumn) instanceof OreTableEntry) {
											OreTableEntry selection = (OreTableEntry)oreSelectionTable.getValueAt(clickedRow, clickedColumn);
											vesselContainer.add(selection, e.isShiftDown());
										}
										break;
									case MouseEvent.BUTTON3:
										if(oreSelectionTable.getValueAt(clickedRow, clickedColumn) instanceof OreTableEntry) {
											oreSelectionTable.changeSelection(clickedRow, clickedColumn, false, false);
											OreTableEntry selection = (OreTableEntry)oreSelectionTable.getValueAt(clickedRow, clickedColumn);
											vesselContainer.remove(selection, e.isShiftDown());
										}
										break;
								}
							}
						}
					});
					oreSelectionTable.addMouseWheelListener(new MouseWheelListener() {
						@Override
						public void mouseWheelMoved(MouseWheelEvent e) {
							Point contextMenuOpenedAt = e.getPoint();
							int clickedRow = oreSelectionTable.rowAtPoint(contextMenuOpenedAt);
							int clickedColumn = oreSelectionTable.columnAtPoint(contextMenuOpenedAt);
							int rotation = e.getWheelRotation();
							if(oreSelectionTable.getValueAt(clickedRow, clickedColumn) instanceof OreTableEntry) {
								OreTableEntry selection = (OreTableEntry)oreSelectionTable.getValueAt(clickedRow, clickedColumn);
								if(rotation < 0) {
									vesselContainer.add(selection, false);
								} else if(rotation > 0) {
									vesselContainer.remove(selection, false);
								}
							}
						}
					});
					updateResultingString();
					jfcAlloyCalculator.setVisible(true);
				} catch(IOException | IllegalArgumentException e) {
					JOptionPane.showMessageDialog(null, "Could not load ore textures.", "IO Error", JOptionPane.ERROR_MESSAGE);
					e.printStackTrace();
					System.exit(1);
				}
			}
		});
	}
	
	public static void updateResultingString() {
		resultField.setText(vesselContainer.getResultingString());
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel descriptionLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTable oreSelectionTable;
    public static javax.swing.JTextPane resultField;
    private tfcvesselalloycalculator.vessel.VesselSlot vesselLabel1;
    private tfcvesselalloycalculator.vessel.VesselSlot vesselLabel2;
    private tfcvesselalloycalculator.vessel.VesselSlot vesselLabel3;
    private tfcvesselalloycalculator.vessel.VesselSlot vesselLabel4;
    private javax.swing.JPanel vesselSpacingPanel;
    // End of variables declaration//GEN-END:variables
}

